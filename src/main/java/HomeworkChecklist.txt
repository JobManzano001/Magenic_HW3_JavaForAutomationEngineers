TODO HOMEWORK CHECKLIST:
PROGRAMMING TASKS
    BaseShape.java
        [X] Create a valid and logical constructor
        [X] Create all logical 'Setter' methods and have each method's 'scope' correct
    Rectangle.java
        [X] Update this class to inherit from BaseShape.java
        [X] Update to a valid and logical constructor
        [X] Add a static main method
    EquilateralTriangle.java
        [X] Update this class to inherit from BaseShape.java
        [X] Update to a valid and logical constructor
        [X] Override the area method
        [X] Override the perimeter method
        [X] Add a static main method
    SquareTest.java, Rectangle.java and EquilateralTriangleTest.java
        [X] Uncomment any code, now that the shape classes are complete.
        [X] Run all tests
    ShapeFactory.java
        [X] Uncomment any marked code in both CreateShape methods
    ShapeTests.java
        [X] Run all tests

 SHORT ANSWERS
    // TODO FOR HOMEWORK: Answer each question, and note many don't have a 'right answer' so just answer honestly
    [ ] What is the purpose of a constructor
         ANSWER HERE: Constructor initialize objects with the initial instance of a variable in a class

    [ ] This project uses 'inheritance' for each shape, since they all have 'BaseShape' as their parent.
        In your own words define what you believe 'inheritance' means.
        ANSWER HERE: Inheritance is  a way to acquire properties,methods from another class

    [ ] Research the concept of 'Object Oriented Programming (OOP)', and write down the 4 principles of 'OOP'.
        ANSWER HERE:
            1)Encapsulation
            2)Inheritance
            3)Abstraction
            4)Polymorphism

    [ ] What are some advantages of 'inheritance'
        ANSWER HERE:It helps to make code reusable and maintainable.

    [ ] In the ShapeFactory.java class, there are two methods both called CreateShape.
        One method takes in 3 parameters - Shape Name, length and height
        One method takes in 2 parameters - Shape Name and length

        This concept is called 'polymorphism', research 'polymorphism' and write below why Factory used 'polymorphism'
        ANSWER HERE: Factory uses method overloading to prevent creating another method with the same behaviour/purpose with another name.
        We can implement same name of method CreateShape with different number of arguments. This is called method overloading

    [ ] Does this project ever cover the concept of 'Abstraction'? If yes, how so?
        ANSWER HERE: Yes. BaseShape is the abstract class of Rectangle class, Square class and EquilateralTriangle class
        and we declare BaseShape class as abstract.

    [ ] Does this project ever cover the concept of 'Encapsulation'? If yes, how so?
        ANSWER HERE: Yes. As we declare some private variable and used it on getter and setter method in BaseShape class.

    [ ] Why did you need to 'override' the 'area' and 'perimeter' methods in 'EquilateralTriangle.java' but not the
        'Square.java' and 'Rectangle.java'?
        ANSWER HERE: Rectangle and Square uses the same formula as BaseShape while EquilateralTriangle has different formula.

    [ ] We made 'ShapeTests' differently than we did 'SquareTest', 'RectangleTest' and 'EquilateralTriangleTest'
        A unit test is testing a single unit and generally that means by classes in java.
        'SquareTest', 'RectangleTest' and 'EquilateralTriangleTest' are all unit tests.
        'ShapeTests' was testing with each shape as a generic 'BaseShape' instead of the previous shape classes.
        Is 'ShapeTests' a unit test of 'ShapeFactory.java'?
        ANSWER HERE: Yes, for me is still a unit testing as long we are testing it unit by unit. it's just like a multiple test assigned  in a class.
        In that case, multiple test are assigned on the ShapeTests.
